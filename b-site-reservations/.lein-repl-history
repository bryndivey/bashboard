(start)
(def a {})
(assoc-in a [:a :b] 1)
(start)
2
(start)
(watch)
(start)
(watch)
(start)
(watch)
(use '[datomic.api :only [q db] :as d])
(def uri "datomic:mem://free")
(d/create-database uri)
(def conn (d/connect uri))
(d/transact conn [:db/add #db/id[:db.part/user] :db/doc "hello world")
(d/transact conn [:db/add #db/id[:db.part/user] :db/doc "hello world"])
(def s (read-string (slurp "/home/bryn//software/datomic-free-0.8.4254/samples/seattle/seattle-schema.dtm")))
s
(first s)
@(d/transact conn [:db/add #db/id[:db.part/user] :db/doc "hello world"])
@(d/transact conn [[:db/add #db/id[:db.part/user] :db/doc "hello world"]])
(conn/db)
conn
(d/db conn)
q
(q '[:find ?entity :where [?entity :db/doc "hello world"]] (db conn))
(def r (q '[:find ?entity :where [?entity :db/doc "hello world"]] (db conn)))
(first r)
(def uri "datomic:free://localhost:4334/hello")
(d/create-database uri)
(def conn (d/connect uri))
@(d/transact conn [[:db/add #db/id[:db.part/user] :db/doc "hello world"]])
(def r (q '[:find ?entity :where [?entity :db/doc "hello world"]] (db conn)))
r
(first r)
(def uri "datomic:free://localhost:4334/seattle")
(d/create-database uri)
(def conn (d/connect uri))
(def schema (read-string (slurp "/home/bryn/software/datomic-free-0.8.4254/samples/seattle/seattle-schema.dtm")))
schema
(d/transact conn schema)
@(d/transact conn schema)
(def data (read-string (slurp "/home/bryn/software/datomic-free-0.8.4254/samples/seattle/seattle-data0.dtm")))
@(d/transact conn data)
(q '[?e :where [?e :community/name]] (db conn))
(q '[?e :where [:find ?e :where [?e :community/name]]] (db conn))
(q '[:find ?e :where [?e :community/name]] (db conn))
(q '[:find ?name :where [?e :community/name ?name]] (db conn))
(q '[:find ?name :where [?e :community/name ?name] [? :community/region :region/n] (db conn))
(q '[:find ?name :where [?e :community/name ?name] [? :community/region :region/n]] (db conn))
(q '[:find ?name :where [?e :community/name ?name] [?e :community/region :region/n]] (db conn))
(q '[:find ?name :where [?e :community/name ?name] [?e :community/type :community.type/blog]] (db conn))
(q '[:find ?name :where [?e :community/name ?name]] (db conn))
(q '[:find ?e :where [?e :community/name]] (db conn))
(first (q '[:find ?e :where [?e :community/name]] (db conn)))
(first (first (q '[:find ?e :where [?e :community/name]] (db conn))))
(d/entity 17592186045518)
(d/entity 17592186045518 db)
(d/entity 17592186045518 (conn db))
(d/entity 17592186045518 (db conn))
ffirst
(ffirst (q '[:find ?e :where [?e :community/name]] (db conn)))
(d/entity (db conn) (ffirst (q '[:find ?e :where [?e :community/name]] (db conn))))
(def results (q '[:find ?c :where [?c :community/name]] (db conn)))
(count results)
(def uri "datomic:free://localhost:4334/sitemanager")
(d/create-database uri)
(def conn (d/connect uri))
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
@(d/transact conn schema)
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
@(d/transact conn schema)
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
@(d/transact conn schema)
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
@(d/transact conn data)
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
@(d/transact conn data)
(def results (q '[:find ?e :where [?e :site/name]] (db conn)))
results
(q '[:find ?name :where [?e :site/name ?name]])
(q '[:find ?name :where [?e :site/name ?name]] (db conn))
(q '[:find ?name ?n :where [?e :site/name ?name] [?e :site/node ?n] (db conn))
(q '[:find ?name ?n :where [?e :site/name ?name] [?e :site/node ?n]] (db conn))
(q '[:find ?name ?ilom :where [?e :site/name ?name] [?e :site/node ?n] [?n :node/ilom ?ilom]] (db conn))
(q '[:find ?ilom :where [?e :site/name ?name] [?e :site/node ?n] [?n :node/ilom ?ilom]] (db conn))
(q '[:find ?e :where [?e :site/name]] (conn db))
(q '[:find ?e :where [?e :site/name]] (db conn))
(d/entity (db conn) 17592186045424)
(def entity (-> conn db (d/entity id)))
(def results (q '[:find ?e :where [?e :site/name]] (db conn)))
results
(def id (ffirst results))
(def entity (-> conn db (d/entity id)))
entity
(keys entity)
(:site/name entity)
entity
(d/tx-report-queue conn)
(q '[:find ?when :where [?tx :db/txInstant ?when]] (db conn))
@(d/transact conn [:site/name "zadev1"])
@(d/transact conn [{:site/name "zadev1"}])
@(d/transact conn [{:db/id (d/tempid) :site/name "zadev1"}])
@(d/transact conn [{:db/id (d/tempid :a) :site/name "zadev1"}])
uri
@(d/transact conn [{:db/id (d/tempid :sitemanager) :site/name "zadev1"}])
(q '[:find ?id [?id db/id]])
(q '[:find ?id :where [?id db/id]])
(q '[:find ?id :where [?id db/id]] (db conn))
(q '[:find ?id :where [?id :db/id]] (db conn))
db
:d/id
(q '[:find ?id :where [?id :d/id]] (db conn))
(q '[:find ?id :where [?id]] (db conn))
(q '[:find ?id :where [?id :db/id]] (db conn))
(q '[:find ?id :where [?id #db/id]] (db conn))
(q '[:find ?id :where [?id :db/ident]] (db conn))
(q '[:find ?name :where [?id :db/ident ?name]] (db conn))
(doseq [a (q '[:find ?name :where [?id :db/ident ?name]] (db conn))] (print a))
(doseq [a (q '[:find ?name :where [?id :db/ident ?name]] (db conn))] (println a))
@(d/transact conn [{:db/id (d/tempid :db.part/user) :site/name "zadev1"}])
(q '[:find ?name :where [_ :site/name ?name]] (db conn))
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
@(d/transact conn schema)
(def uri "datomic:mem://localhost:4334/sitemanager")
(d/create-database uri)
(use '[datomic.api :only [q db] :as d])
(def uri "datomic:mem://sitemanager")
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
@(d/transact conn schema)
(d/create-database uri)
(def conn (d/connect uri))
@(d/transact conn schema)
@(d/transact conn data)
@(d/transact conn schema)
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
@(d/transact conn data)
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
@(d/transact conn schema)
(def uri "datomic:mem://sitemanager")
(d/create-database uri)
(use '[datomic.api :only [q db] :as d])
(d/create-database uri)
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
@(d/transact conn schema)
(def conn (d/connect uri))
@(d/transact conn schema)
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
(use '[datomic.api :only [q db] :as d])
(def uri "datomic:mem://sitemanager")
(d/create-database uri)
(def conn (d/connect uri))
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
@(d/transact conn schema)
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
@(d/transact conn data)
(use '[datomic.api :only [q db] :as d])
(def uri "datomic:mem://sitemanager")
(d/create-database uri)
(def conn (d/connect uri))
(def schema (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/schema.dtm")))
(def data (read-string (slurp "/home/bryn/code/bashboard/b-site-reservations/resources/data.dtm")))
@(d/transact conn schema)
@(d/transact conn data)
@(d/transact conn [{:db/id (d/tempid :db.part/user) :site/name "zadev1"}])
@(d/transact conn [:site/name "zadev1" :site/state :site.state/up}])
@(d/transact conn [{:site/name "zadev1" :site/state :site.state/up}])
(q '[:find ?id :where [?id :site/name "zadev1"])
(q '[:find ?id :where [?id :site/name "zadev1"]])
(q '[:find ?id :where [?id :site/name "zadev1"]] (conn db))
(q '[:find ?id :where [?id :site/name "zadev1"]] (db conn))
(def id (ffirst (q '[:find ?id :where [?id :site/name "zadev1"]] (db conn))))
id
@(d/transact conn [{:db/id id :site/name "zadev1" :site/state :site.state/up}])
@(d/transact conn [{:db/id id :site/name "zadev1" :site/state :site.state/down}])
(q '[:find ?name ?state ?tx :where [?e :site/name ?name] [?e :site/state ?state ?tx]] (db conn))
(q '[:find  ?state ?tx :where [?e :site/state ?state ?tx]] (db conn))
@(d/transact conn [{:db/id id :site/name "zadev1" :site/state :site.state/unknown}])
(q '[:find  ?state ?tx :where [?e :site/state ?state ?tx]] (db conn))
(q '[:find  ?state ?tx ?when :where [?e :site/state ?state ?tx] [?tx :db/txInstant ?when] (db conn))
(q '[:find  ?state ?tx ?when :where [?e :site/state ?state ?tx] [?tx :db/txInstant ?when]] (db conn))
(q '[:find  ?tx ?when :where [?tx :db/txInstant ?when]] (db conn))
(doseq [a (q '[:find  ?tx ?when :where [?tx :db/txInstant ?when]] (db conn))] (println a))
@(d/transact conn [{:db/id id :site/name "zadev1" :site/state :site.state/up}])
(doseq [a (q '[:find  ?tx ?when :where [?tx :db/txInstant ?when]] (db conn))] (println a))
(q '[:find ?name ?state :where [?s :site/name ?name] [?s :site/state ?state]] (db conn))
(q '[:find ?name ?state ?sname :where [?s :site/name ?name] [?s :site/state ?state] [?state :db/ident ?sname] (db conn))
(q '[:find ?name ?state ?sname :where [?s :site/name ?name] [?s :site/state ?state] [?state :db/ident ?sname]] (db conn))
(.asOf (db conn))
d/as-of
(help d/as-of)
(doc d/as-of)
(doc d/as-of-t)
(def db-asof-14-21 (db/as-of (db conn) #inst "2013-11-07T14:21:32.518-00:00"))
(def db-asof-14-21 (d/as-of (db conn) #inst "2013-11-07T14:21:32.518-00:00"))
(q '[:find ?name ?state ?sname :where [?s :site/name ?name] [?s :site/state ?state] [?state :db/ident ?sname]] db-asof-14-21)
(doc d/is-history)
(d/is-history (db conn))
(d/is-history db-asof-14-21)
(doc d/history)
(doc d/seek-datoms)
(doc d/index-range)
d/datoms
(doc d/datoms)
(doc d/entity)
(doc d/entity-db)
(doc d/since)
(def db-since-14-21 (d/since (db conn) #inst "2013-11-07T14:21:32.518-00:00"))
(q '[:find ?name ?state ?sname :where [?s :site/name ?name] [?s :site/state ?state] [?state :db/ident ?sname]] db-asof-14-21)
(q '[:find ?name ?state ?sname :where [?s :site/name ?name] [?s :site/state ?state] [?state :db/ident ?sname]] db-since-14-21)
(q '[:find ?e :where [? :db/id])
(q '[:find ?e :where [? :db/id]])
(q '[:find ?e :where [?e :db/id]])
(q '[:find ?e :where [?e :db/id]] (db conn))
(q '[:find ?e :where [?e :db/ident]] (db conn))
(q '[:find ?e ?n :where [?e :db/ident ?n]] (db conn))
(q '[:find ?e ?n :where [?e :db/id ?n]] (db conn))
(q '[:find ?e ?n :where [?e :db/ident ?n]] db-since-14-21)
(d/history (conn db))
(doc d/history)
(d/history)
(d/history (fn []))
(d/history conn)
(d/history (db conn))
(db conn)
(def hdb (d/history (db conn)))
(q '[:find ?tx :where [?tx :db/txInstant]] hdb)
(q '[:find ?tx ?when :where [?tx :db/txInstant ?when]] hdb)
(q '[:find ?tx ?state :where [?e :site/state ?state ?tx]] hdb)
(q '[:find ?tx ?state :where [?e :site/state ?s ?tx] [?s :db/ident ?state]] hdb)
(q '[:find ?tx ?state ?a :where [?e :site/state ?s ?tx ?a] [?s :db/ident ?state]] hdb)
(q '[:find ?when ?tx ?state ?a :where [?e :site/state ?s ?tx ?a] [?s :db/ident ?state] [?tx :db/txInstant ?when] hdb)
(q '[:find ?when ?tx ?state ?a :where [?e :site/state ?s ?tx ?a] [?s :db/ident ?state] [?tx :db/txInstant ?when]] hdb)
(doseq [a (q '[:find ?when ?tx ?state ?a :where [?e :site/state ?s ?tx ?a] [?s :db/ident ?state] [?tx :db/txInstant ?when]] hdb)] (println a))
(doseq [a (q '[:find ?when ?tx ?state ?change :where [?e :site/state ?s ?tx ?change] [?s :db/ident ?state] [?tx :db/txInstant ?when] [(= ?change true)]] hdb)] (println a))
(doseq [a (q '[:find ?when ?tx ?state ?change :where [?e :site/state ?s ?tx ?change] [?s :db/ident ?state] [?tx :db/txInstant ?when] [(= ?change true)]] (db conn))] (println a))
(doc d/history)
